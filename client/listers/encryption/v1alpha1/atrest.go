/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-mongodbatlas-api/apis/encryption/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AtRestLister helps list AtRests.
// All objects returned here must be treated as read-only.
type AtRestLister interface {
	// List lists all AtRests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AtRest, err error)
	// AtRests returns an object that can list and get AtRests.
	AtRests(namespace string) AtRestNamespaceLister
	AtRestListerExpansion
}

// atRestLister implements the AtRestLister interface.
type atRestLister struct {
	indexer cache.Indexer
}

// NewAtRestLister returns a new AtRestLister.
func NewAtRestLister(indexer cache.Indexer) AtRestLister {
	return &atRestLister{indexer: indexer}
}

// List lists all AtRests in the indexer.
func (s *atRestLister) List(selector labels.Selector) (ret []*v1alpha1.AtRest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AtRest))
	})
	return ret, err
}

// AtRests returns an object that can list and get AtRests.
func (s *atRestLister) AtRests(namespace string) AtRestNamespaceLister {
	return atRestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AtRestNamespaceLister helps list and get AtRests.
// All objects returned here must be treated as read-only.
type AtRestNamespaceLister interface {
	// List lists all AtRests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AtRest, err error)
	// Get retrieves the AtRest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AtRest, error)
	AtRestNamespaceListerExpansion
}

// atRestNamespaceLister implements the AtRestNamespaceLister
// interface.
type atRestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AtRests in the indexer for a given namespace.
func (s atRestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AtRest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AtRest))
	})
	return ret, err
}

// Get retrieves the AtRest from the indexer for a given namespace and name.
func (s atRestNamespaceLister) Get(name string) (*v1alpha1.AtRest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("atrest"), name)
	}
	return obj.(*v1alpha1.AtRest), nil
}
