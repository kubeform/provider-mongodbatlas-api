/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-mongodbatlas-api/apis/privatelink/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EndpointServiceAdlLister helps list EndpointServiceAdls.
// All objects returned here must be treated as read-only.
type EndpointServiceAdlLister interface {
	// List lists all EndpointServiceAdls in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointServiceAdl, err error)
	// EndpointServiceAdls returns an object that can list and get EndpointServiceAdls.
	EndpointServiceAdls(namespace string) EndpointServiceAdlNamespaceLister
	EndpointServiceAdlListerExpansion
}

// endpointServiceAdlLister implements the EndpointServiceAdlLister interface.
type endpointServiceAdlLister struct {
	indexer cache.Indexer
}

// NewEndpointServiceAdlLister returns a new EndpointServiceAdlLister.
func NewEndpointServiceAdlLister(indexer cache.Indexer) EndpointServiceAdlLister {
	return &endpointServiceAdlLister{indexer: indexer}
}

// List lists all EndpointServiceAdls in the indexer.
func (s *endpointServiceAdlLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointServiceAdl, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointServiceAdl))
	})
	return ret, err
}

// EndpointServiceAdls returns an object that can list and get EndpointServiceAdls.
func (s *endpointServiceAdlLister) EndpointServiceAdls(namespace string) EndpointServiceAdlNamespaceLister {
	return endpointServiceAdlNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EndpointServiceAdlNamespaceLister helps list and get EndpointServiceAdls.
// All objects returned here must be treated as read-only.
type EndpointServiceAdlNamespaceLister interface {
	// List lists all EndpointServiceAdls in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointServiceAdl, err error)
	// Get retrieves the EndpointServiceAdl from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EndpointServiceAdl, error)
	EndpointServiceAdlNamespaceListerExpansion
}

// endpointServiceAdlNamespaceLister implements the EndpointServiceAdlNamespaceLister
// interface.
type endpointServiceAdlNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EndpointServiceAdls in the indexer for a given namespace.
func (s endpointServiceAdlNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointServiceAdl, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointServiceAdl))
	})
	return ret, err
}

// Get retrieves the EndpointServiceAdl from the indexer for a given namespace and name.
func (s endpointServiceAdlNamespaceLister) Get(name string) (*v1alpha1.EndpointServiceAdl, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("endpointserviceadl"), name)
	}
	return obj.(*v1alpha1.EndpointServiceAdl), nil
}
